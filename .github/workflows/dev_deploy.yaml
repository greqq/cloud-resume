name: Build and Deploy Development Next.js App

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_SSO_REGION }}
  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the Next.js app repository
      - name: Checkout Next.js app
        uses: actions/checkout@v3

      # Checkout the IaC repository
      - name: Checkout IaC Repository
        uses: actions/checkout@v3
        with:
          repository: greqq/terraform-aws-infrastructure
          path: iac-repo

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_DEV }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Copy terraform.tfvars from S3 to production folder
        run: |
          aws s3 cp s3://dev-terraform-config-cloud-resume/terraform.tfvars iac-repo/environments/development
          aws s3 cp s3://dev-terraform-config-cloud-resume/backend.conf iac-repo/environments/development

      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        working-directory: iac-repo/environments/development
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend.conf
        working-directory: iac-repo/environments/development

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: iac-repo/environments/development

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan
        working-directory: iac-repo/environments/development
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -no-color tfplan
        working-directory: iac-repo/environments/development
        continue-on-error: true

      - name: Get S3 Bucket Name from Terraform Outputs
        run: |
          cd iac-repo/environments/development
          BUCKET_NAME=$(terraform-bin output -raw s3_bucket_name)
          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV

      # Get the CloudFront Distribution ID from Terraform outputs
      - name: Get CloudFront Distribution ID
        run: |
          cd iac-repo/environments/development
          echo "CLOUDFRONT_ID=$(terraform-bin output -raw cloudfront_distribution_id)" >> $GITHUB_ENV

       # Get the Get invoke API url from terraform
      - name: Get Invoke API Url from Terraform
        run: |
            cd iac-repo/environments/development
            echo "PUBLIC_API_URL=$(terraform-bin output -raw dev_api_invoke_url)" >> $GITHUB_ENV

        # Set NEXT_PUBLIC_API_URL using PUBLIC_API_URL
      - name: Set Next.js API URL
        run: |
          echo "NEXT_PUBLIC_API_URL=$PUBLIC_API_URL" >> $GITHUB_ENV
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run Cypress tests
        run: npx cypress run --env NEXT_PUBLIC_API_URL=$PUBLIC_API_URL

      - name: Build Next.js app
        run: npm run build

      - name: Export Next.js app
        run: npm run export

      - name: Upload Website Files to S3
        run: |
          aws s3 sync ./out/ s3://$BUCKET_NAME/

      - name: Clear CDN Cache
        run: |
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
